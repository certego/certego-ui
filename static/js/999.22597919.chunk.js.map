{"version":3,"file":"static/js/999.22597919.chunk.js","mappings":"+OAMe,SAASA,EAAOC,GAC7B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,IAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKH,GAAK,IAAAI,SAAA,EACvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAkB,CACjBC,KAAK,YACLC,UACEP,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAL,SAAA,EACEC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,YAAWR,SAAC,gBAG9CC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,OAAMR,SAAC,WAGzCC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,UAASR,SAAC,cAG5CC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,SAAQR,SAAC,aAG3CC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,UAASR,SAAC,cAG5CC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,WAAUR,SAAC,eAG7CC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAG,cAAcC,MAAM,WAAUR,SAAC,oBAMnDC,EAAAA,EAAAA,KAACC,EAAAA,EAAkB,CACjBC,KAAK,aACLC,UACEP,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAL,SAAA,EACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CACTC,MAAO,CACLC,SAAU,CACRC,OAAQ,IACRC,WAAY,aAEdC,UAAW,wBAGfb,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CACTC,MAAO,CACLC,SAAU,CACRC,OAAQ,IACRC,WAAY,yBAEdC,UAAW,+BAQ3B,C,oJC3De,SAASZ,EAAmBN,GAEzC,IAAQO,EAAiCP,EAAjCO,KAAMC,EAA2BR,EAA3BQ,SAAaW,GAASC,EAAAA,EAAAA,GAAKpB,EAAKqB,GAExCV,EAAE,GAAAW,OAAMf,EAAI,YAGlBgB,EAAoCC,EAAAA,UAAe,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAE1BI,EAAS,WAAH,OAASD,GAAc,SAACE,GAAC,OAAMA,CAAC,GAAE,EAE9C,OACE7B,EAAAA,EAAAA,MAACC,EAAAA,IAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAC4B,UAAU,WAAcZ,GAAS,IAAAf,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MACEM,GAAIA,EACJqB,QAASH,EACTE,UAAU,8CAA6C3B,UAEvDC,EAAAA,EAAAA,KAAA,QAAM0B,UAAU,eAAc3B,SAAEG,OAEhCoB,IACAtB,EAAAA,EAAAA,KAAA,OAAK0B,UAAU,SAASC,QAASH,EAAOzB,UACtCC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAe,CAACN,WAAYA,OAGjCtB,EAAAA,EAAAA,KAAC6B,EAAAA,GAAQ,CAACC,QAAO,IAAAb,OAAMX,GAAMyB,OAAQT,EAAWvB,UAC9CC,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CAAAjC,SAAEI,SAIpB,C","sources":["sections/Alerts.jsx","sections/ComponentAsExample.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { ContentSection, ErrorAlert, IconAlert } from \"@certego/certego-ui\";\n\nimport ComponentAsExample from \"./ComponentAsExample\";\n\nexport default function Alerts(props) {\n  return (\n    <ContentSection {...props}>\n      <ComponentAsExample\n        name=\"IconAlert\"\n        bodyNode={\n          <>\n            <IconAlert id=\"iconalert-1\" color=\"secondary\">\n              Secondary!\n            </IconAlert>\n            <IconAlert id=\"iconalert-2\" color=\"info\">\n              Info!\n            </IconAlert>\n            <IconAlert id=\"iconalert-3\" color=\"success\">\n              Success!\n            </IconAlert>\n            <IconAlert id=\"iconalert-4\" color=\"danger\">\n              Danger!\n            </IconAlert>\n            <IconAlert id=\"iconalert-5\" color=\"warning\">\n              Warning!\n            </IconAlert>\n            <IconAlert id=\"iconalert-6\" color=\"accent-1\">\n              Accent-1!\n            </IconAlert>\n            <IconAlert id=\"iconalert-7\" color=\"accent-2\">\n              Accent-2!\n            </IconAlert>\n          </>\n        }\n      />\n      <ComponentAsExample\n        name=\"ErrorAlert\"\n        bodyNode={\n          <>\n            <ErrorAlert\n              error={{\n                response: {\n                  status: 404,\n                  statusText: \"Not Found\",\n                },\n                parsedMsg: \"An error occured.\",\n              }}\n            />\n            <ErrorAlert\n              error={{\n                response: {\n                  status: 500,\n                  statusText: \"Internal Server Error\",\n                },\n                parsedMsg: \"An error occured.\",\n              }}\n            />\n          </>\n        }\n      />\n    </ContentSection>\n  );\n}\n","import React from \"react\";\nimport { Collapse, Container } from \"reactstrap\";\n\nimport { ContentSection, ArrowToggleIcon } from \"@certego/certego-ui\";\n\nexport default function ComponentAsExample(props) {\n  // props\n  const { name, bodyNode, ...restProps } = props;\n\n  const id = `${name}-example`;\n\n  // local state\n  const [isExpanded, setIsExpanded] = React.useState(true);\n\n  const toggle = () => setIsExpanded((s) => !s);\n\n  return (\n    <ContentSection className=\"bg-body\" {...restProps}>\n      <h4\n        id={id}\n        onClick={toggle}\n        className=\"pt-2 pb-3 pointer border-bottom border-dark\"\n      >\n        <mark className=\"text-primary\">{name}</mark>\n      </h4>\n      {!isExpanded && (\n        <div className=\"center\" onClick={toggle}>\n          <ArrowToggleIcon isExpanded={isExpanded} />\n        </div>\n      )}\n      <Collapse toggler={`#${id}`} isOpen={isExpanded}>\n        <Container>{bodyNode}</Container>\n      </Collapse>\n    </ContentSection>\n  );\n}\n"],"names":["Alerts","props","_jsxs","ContentSection","_objectSpread","children","_jsx","ComponentAsExample","name","bodyNode","_Fragment","IconAlert","id","color","ErrorAlert","error","response","status","statusText","parsedMsg","restProps","_objectWithoutProperties","_excluded","concat","_React$useState","React","_React$useState2","_slicedToArray","isExpanded","setIsExpanded","toggle","s","className","onClick","ArrowToggleIcon","Collapse","toggler","isOpen","Container"],"sourceRoot":""}