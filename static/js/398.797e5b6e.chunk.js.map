{"version":3,"file":"static/js/398.797e5b6e.chunk.js","mappings":"8QA4BMA,EAAmB,CACvBC,IAAK,wFACLC,MAAO,SAACC,GAAD,MAAQ,CAAEC,MAAOD,EAAC,QAAaE,MAAOF,EAAC,QAAvC,GAEHG,EAAoB,CACxB,CAAEF,MAAO,oBAAqBC,MAAO,OACrC,CAAED,MAAO,sBAAuBC,MAAO,OACvC,CAAED,MAAO,gBAAiBC,MAAO,OACjC,CAAED,MAAO,cAAeC,MAAO,OAC/B,CAAED,MAAO,oBAAqBC,MAAO,OAEjCE,EAAqB,CACzB,CACEH,MAAO,2CACPC,MAAO,iBAET,CACED,MAAO,qCACPC,MAAO,mBAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,sBACPC,MAAO,uBAET,CACED,MAAO,QACPC,MAAO,UAGLG,EAAgB,CAAC,SAAU,OAAQ,SACnCC,EAAgB,CACpBC,KAAM,GACNC,QAAS,GACTC,OAAQJ,EAAc,GACtBK,QAAQ,EACRC,YAAa,CAAC,EAAG,IACjBC,WAAYT,EAAkB,GAAlB,MACZU,gBAAiB,GACjBC,SAAU,GACVC,cAAe,GACfC,aAAa,EACbC,eAAgB,IAIH,SAASC,EAAYC,GAClC,IAAMC,EAAeC,EAAAA,YAAA,yCAAkB,WAAOC,EAAQC,GAAf,+FAE7BC,MAAMC,KAAKC,UAAUJ,IAFQ,6EAMnCC,EAAOI,eAAc,GANc,0EAAlB,wDAQlB,IAEH,OACE,UAAC,MAAD,kBAAoBR,GAApB,eACE,SAAC,KAAD,CACEb,cAAeA,EACfsB,SAAUR,EAFZ,SAIG,SAACG,GAAD,OACC,UAAC,KAAD,CAAMM,UAAU,0BAAhB,WACE,UAAC,KAAD,YAEE,SAAC,KAAD,CAAKC,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,WAAWE,IAAI,OAAhC,mBAGA,SAAC,KAAD,CACEC,WAAS,EACTC,KAAK,OACL1B,KAAK,OACLsB,UAAU,qBAKhB,SAAC,KAAD,CAAKC,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,WAAWE,IAAI,UAAhC,sBAGA,SAAC,MAAD,gBACExB,KAAK,WACDV,GAFN,IAGEgC,UAAU,sBAKhB,SAAC,KAAD,CAAKC,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,WAAWE,IAAI,SAAhC,qBAGA,SAAC,KAAD,CACEF,UAAU,UACVtB,KAAK,SACLL,MAAOqB,EAAOD,OAAOb,OACrByB,QAAS7B,EACT8B,SAAU,SAACC,GAAD,OAAQb,EAAOc,cAAc,SAAUD,EAAvC,aAKlB,UAAC,KAAD,YAEE,SAAC,KAAD,CAAKN,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,WAAWE,IAAI,SAAhC,gCAGA,SAAC,KAAD,CACEO,SAAS,EACTC,QAASpC,EACTD,MAAOqB,EAAOD,OAAOV,WACrBuB,SAAU,SAAAK,GAAC,OAAIjB,EAAOc,cAAc,aAAcG,EAAvC,UAKjB,SAAC,KAAD,CAAKV,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,WAAWE,IAAI,SAAhC,+BAGA,SAAC,KAAD,CACEQ,QAASpC,EACTD,MAAOqB,EAAOD,OAAOT,gBACrBsB,SAAU,SAACK,GAAD,OAAOjB,EAAOc,cAAc,kBAAmBG,EAA/C,UAKhB,SAAC,KAAD,CAAKV,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,WAAWE,IAAI,WAAhC,kDAGA,SAAC,KAAD,CACEU,gBAAiBlB,EAAOD,OAAOR,SAC/B4B,iBAAkB,SAAAF,GAAC,OAAIjB,EAAOc,cAAc,WAAYG,EAArC,aAK3B,UAAC,KAAD,YAEE,SAAC,KAAD,CAAKG,GAAI,EAAT,UACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAOd,UAAU,WAAWE,IAAI,gBAAhC,mCACuB,yCADvB,QAGA,SAAC,KAAD,CACExB,KAAK,gBACL2B,QAAS9B,EACTyB,UAAU,qBAKhB,SAAC,KAAD,CAAKc,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOZ,IAAI,iBAAX,8BACA,SAAC,KAAD,CACEE,KAAK,WACL1B,KAAK,iBACLsB,UAAU,wBAKlB,UAAC,KAAD,YAEE,SAAC,KAAD,CAAKc,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOd,UAAU,WAAWE,IAAI,SAAhC,mCAGA,SAAC,KAAD,CACEF,UAAU,UACVe,WAAW,QACX1C,MAAOqB,EAAOD,OAAOZ,OACrByB,SAAU,SAAAC,GAAE,OAAIb,EAAOc,cAAc,SAAUD,EAAnC,SAKjBb,EAAOD,OAAOZ,SACb,SAAC,KAAD,CAAKiC,GAAI,EAAGd,UAAU,OAAtB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOA,UAAU,WAAWE,IAAI,SAAhC,kCAGA,SAAC,KAAD,CACEc,OAAQ,CAAC,EAAG,IACZC,cAAevB,EAAOD,OAAOX,YAC7BwB,SAAU,SAACK,GAAD,OAAOjB,EAAOc,cAAc,cAAeG,EAA3C,aAMpB,SAAC,KAAD,WAEE,SAAC,KAAD,WACE,SAAC,KAAD,CACEX,UAAU,UACV5B,MAAM,oCACNM,KAAK,cACLwC,MAAOxB,EAAOD,OAAON,mBAI3B,UAAC,KAAD,YAEE,SAAC,KAAD,CAAKc,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,IAAI,aAAX,kDACA,SAAC,KAAD,CAAiBiB,YAAazB,EAAOD,OAAQ2B,UAAQ,UAIzD,SAAC,KAAD,CAAKnB,GAAI,EAAT,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,IAAI,aAAX,kDACA,SAAC,KAAD,CAAiBiB,YAAazB,EAAOD,kBAI3C,SAAC,KAAD,CAAKO,UAAU,OAAf,UAEE,SAAC,KAAD,WACE,UAAC,KAAD,CACEI,KAAK,SACLiB,WAAY3B,EAAO4B,SAAW5B,EAAO6B,cACrCC,MAAM,UACNC,SAAO,EACPzB,UAAU,SALZ,UAOGN,EAAO6B,eAAgB,SAAC,KAAD,CAAUvB,UAAU,OAP9C,iBAWJ,SAAC,KAAD,WACE,SAAC,KAAD,WACE,kBAAOA,UAAU,aAAjB,qGA3LP,KAoMH,iFAGL,C","sources":["sections/Form.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Col,\n  Label,\n  FormGroup,\n  Button,\n  Input,\n  Spinner,\n  Row\n} from \"reactstrap\";\nimport { Form, Formik } from \"formik\";\n\nimport {\n  ContentSection,\n  Select,\n  AsyncSelect,\n  ButtonSelect,\n  TernaryCheckbox,\n  MultiRangeSlider,\n  MultiSelectCreatableInput,\n  MultiSelectDropdownInput,\n  MultiSelectTextInput,\n  InputCheckBox,\n  CustomJsonInput,\n  NewJsonRenderer,\n} from \"@certego/certego-ui\";\n\n// constants\nconst asyncSelectProps = {\n  url: \"https://raw.githubusercontent.com/samayo/country-json/master/src/country-by-name.json\",\n  mapFn: (x) => ({ label: x[\"country\"], value: x[\"country\"] }),\n};\nconst occupationChoices = [\n  { label: \"Software Engineer\", value: \"swe\" },\n  { label: \"Super Shadowy Coder\", value: \"ssc\" },\n  { label: \"Data Engineer\", value: \"dee\" },\n  { label: \"ML engineer\", value: \"mle\" },\n  { label: \"Security engineer\", value: \"se\" },\n];\nconst hearAboutUsChoices = [\n  {\n    label: \"Search Engine (Google, DuckDuckGo, etc.)\",\n    value: \"search_engine\",\n  },\n  {\n    label: \"Recommended by friend or colleague\",\n    value: \"was_recommended\",\n  },\n  {\n    label: \"Social media\",\n    value: \"social_media\",\n  },\n  {\n    label: \"Blog or Publication\",\n    value: \"blog_or_publication\",\n  },\n  {\n    label: \"Other\",\n    value: \"other\",\n  },\n];\nconst genderChoices = [\"Female\", \"Male\", \"Other\"];\nconst initialValues = {\n  name: \"\",\n  country: \"\",\n  gender: genderChoices[0],\n  likeUI: true,\n  likeUIRange: [1, 10],\n  occupation: occupationChoices[0][\"value\"],\n  pastOccupations: [],\n  techTags: [],\n  discover_from: \"\",\n  acceptTerms: false,\n  additionalNote: \"\",\n};\n\n// Examples\nexport default function FormExample(props) {\n  const onFormSubmit = React.useCallback(async (values, formik) => {\n    try {\n      await alert(JSON.stringify(values));\n    } catch (e) {\n      // redundant catch\n    } finally {\n      formik.setSubmitting(false);\n    }\n  }, []);\n\n  return (\n    <ContentSection {...props}>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onFormSubmit}\n      >\n        {(formik) => (\n          <Form className=\"content-section bg-body\">\n            <Row>\n              {/* Input */}\n              <Col lg={4}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"name\">\n                    Name\n                  </Label>\n                  <Input\n                    autoFocus\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"input-dark\"\n                  />\n                </FormGroup>\n              </Col>\n              {/* AsyncSelect */}\n              <Col lg={3}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"country\">\n                    Country\n                  </Label>\n                  <AsyncSelect\n                    name=\"country\"\n                    {...asyncSelectProps}\n                    className=\"input-dark\"\n                  />\n                </FormGroup>\n              </Col>\n              {/* ButtonSelect */}\n              <Col lg={3}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"gender\">\n                    Gender\n                  </Label>\n                  <ButtonSelect\n                    className=\"d-block\"\n                    name=\"gender\"\n                    value={formik.values.gender}\n                    choices={genderChoices}\n                    onChange={(ch) => formik.setFieldValue(\"gender\", ch)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              {/* MultiSelectDropdownInput */}\n              <Col lg={4}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"likeUI\">\n                    Select Occupation\n                  </Label>\n                  <MultiSelectDropdownInput\n                    isMulti={false}\n                    options={occupationChoices}\n                    value={formik.values.occupation}\n                    onChange={v => formik.setFieldValue(\"occupation\", v)}\n                  />\n                </FormGroup>\n              </Col>\n              {/* MultiSelectCreatableInput */}\n              <Col lg={4}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"likeUI\">\n                    Past Occupations\n                  </Label>\n                  <MultiSelectCreatableInput\n                    options={occupationChoices}\n                    value={formik.values.pastOccupations}\n                    onChange={(v) => formik.setFieldValue(\"pastOccupations\", v)}\n                  />\n                </FormGroup>\n              </Col>\n              {/* MultiSelectTextInput  */}\n              <Col lg={4}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"techTags\">\n                    Add some technologies you work with\n                  </Label>\n                  <MultiSelectTextInput\n                    defaultElements={formik.values.techTags}\n                    onElementsChange={v => formik.setFieldValue(\"techTags\", v)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              {/* Select */}\n              <Col md={4}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"discover_from\">\n                    How did you discover <code>certego-ui</code>?\n                  </Label>\n                  <Select\n                    name=\"discover_from\"\n                    choices={hearAboutUsChoices}\n                    className=\"input-dark\"\n                  />\n                </FormGroup>\n              </Col>\n              {/* Input */}\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"additionalNote\">Additional Note</Label>\n                  <Input\n                    type=\"textarea\"\n                    name=\"additionalNote\"\n                    className=\"input-dark\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              {/* TernaryCheckbox */}\n              <Col md={2}>\n                <FormGroup>\n                  <Label className=\"required\" for=\"likeUI\">\n                    Do you like this UI?\n                  </Label>\n                  <TernaryCheckbox\n                    className=\"d-block\"\n                    undefLabel=\"Maybe\"\n                    value={formik.values.likeUI}\n                    onChange={ch => formik.setFieldValue(\"likeUI\", ch)}\n                  />\n                </FormGroup>\n              </Col>\n              {/* MultiRangeSlider */}\n              {formik.values.likeUI && (\n                <Col md={4} className=\"pt-3\">\n                  <FormGroup>\n                    <Label className=\"required\" for=\"likeUI\">\n                      On a scale of 1-10?\n                    </Label>\n                    <MultiRangeSlider\n                      domain={[1, 10]}\n                      defaultValues={formik.values.likeUIRange}\n                      onChange={(v) => formik.setFieldValue(\"likeUIRange\", v)}\n                    />\n                  </FormGroup>\n                </Col>\n              )}\n            </Row>\n            <Row>\n              {/* InputCheckBox */}\n              <Col>\n                <InputCheckBox\n                  className=\"bg-body\"\n                  label=\"I Accept the terms and conditions\"\n                  name=\"acceptTerms\"\n                  valid={formik.values.acceptTerms}\n                />\n              </Col>\n            </Row>\n            <Row>\n              {/* CustomJsonInput */}\n              <Col lg={6}>\n                <FormGroup>\n                  <Label for=\"debugForm1\">Debug Form Values (CustomJsonInput)</Label>\n                  <CustomJsonInput placeholder={formik.values} viewOnly />\n                </FormGroup>\n              </Col>\n\n              <Col lg={6}>\n                <FormGroup>\n                  <Label for=\"debugForm2\">Debug Form Values (NewJsonRenderer)</Label>\n                  <NewJsonRenderer placeholder={formik.values} />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row className=\"mt-5\">\n              {/* Submit */}\n              <Col>\n                <Button\n                  type=\"submit\"\n                  disabled={!(formik.isValid || formik.isSubmitting)}\n                  color=\"primary\"\n                  outline\n                  className=\"btn-md\"\n                >\n                  {formik.isSubmitting && <Spinner  className=\"sm\" />}Submit\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <small className=\"text-muted\">\n                  Note: This form is only for demo purposes, input data is neither\n                  sent nor stored.\n                </small>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n      <h6>Above example form shows usage of all components.</h6>\n    </ContentSection>\n  );\n}\n"],"names":["asyncSelectProps","url","mapFn","x","label","value","occupationChoices","hearAboutUsChoices","genderChoices","initialValues","name","country","gender","likeUI","likeUIRange","occupation","pastOccupations","techTags","discover_from","acceptTerms","additionalNote","FormExample","props","onFormSubmit","React","values","formik","alert","JSON","stringify","setSubmitting","onSubmit","className","lg","for","autoFocus","type","choices","onChange","ch","setFieldValue","isMulti","options","v","defaultElements","onElementsChange","md","undefLabel","domain","defaultValues","valid","placeholder","viewOnly","disabled","isValid","isSubmitting","color","outline"],"sourceRoot":""}