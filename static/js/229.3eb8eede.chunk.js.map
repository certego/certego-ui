{"version":3,"file":"static/js/229.3eb8eede.chunk.js","mappings":"4QAKe,SAASA,EAAmBC,GAEzC,IAAQC,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,SAAaC,GAA3B,OAAyCH,EAAzC,GAEMI,EAAE,UAAMH,EAAN,YAGR,EAAoCI,EAAAA,UAAe,GAAnD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,kBAAMD,GAAc,SAACE,GAAD,OAAQA,CAAR,GAApB,EAEf,OACE,UAAC,MAAD,gBAAgBC,UAAU,WAAcP,GAAxC,eACE,eACEC,GAAIA,EACJO,QAASH,EACTE,UAAU,8CAHZ,UAKE,iBAAMA,UAAU,eAAhB,SAAgCT,OAEhCK,IACA,gBAAKI,UAAU,SAASC,QAASH,EAAjC,UACE,SAAC,KAAD,CAAiBF,WAAYA,OAGjC,SAAC,KAAD,CAAUM,QAAO,WAAMR,GAAMS,OAAQP,EAArC,UACE,SAAC,KAAD,UAAYJ,SAInB,C,2ICjBKY,EAAS,6CACTC,EAAU,CACd,CACEC,OAAQ,IACRC,SAAU,KACVC,OAAQ,kBAAM,IAAN,EACRC,SAAU,IAEZ,CACEH,OAAQ,QACRC,SAAU,QACVC,OAAQE,EAAAA,IAEV,CACEJ,OAAQ,YACRC,SAAU,YACVC,OAAQG,EAAAA,GACRC,cAAe,CAAC,OAAQ,SACxBC,eAAe,EACfC,KAAM,gBAAGC,EAAH,EAAGA,MAAH,OAAe,SAAC,KAAD,CAAaC,OAAQD,GAApC,EACNN,SAAU,KAGRQ,EAAe,CACnBC,SAAU,EACVC,OAAQ,CAAC,CAAEzB,GAAI,KAAM0B,MAAM,KAGd,SAASC,EAAM/B,GAE5B,OAAmCgC,EAAAA,EAAAA,IAAwB,CACzDC,IAAKnB,IADP,eAAOoB,EAAP,KAAyBC,EAAzB,KAIA,EAAwC9B,EAAAA,SAAe,IAAvD,eAAO+B,EAAP,KAAqBC,EAArB,KAGA,GAAsBC,EAAAA,EAAAA,IACpB,CACEL,IAAKnB,GAEP,CACEC,QAAAA,EACAY,aAAAA,EACAY,OAAQ,CACNC,kBAAkB,EAClBC,gBAAgB,GAElBC,aAAc,gBAAGC,EAAH,EAAGA,IAAH,OACZ,gBAAKjC,UAAU,gBAAf,SACGkC,KAAKC,UAAUF,EAAIG,SAAU,KAAM,IAF1B,IAMhB,SAACC,GAAD,OAAOA,EAAEC,MAAM,EAAG,EAAlB,IAjBOC,GAAT,eAoBA,OACE,UAAC,MAAD,kBAAoBjD,GAApB,eACE,SAAC,IAAD,CACEC,KAAK,YACLC,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWgD,MAAM,OAAjB,wIAIA,gBAAKxC,UAAU,gDAAf,UACE,6BAAQ0B,EAAae,OAArB,kBAEF,SAAChB,EAAD,CACEiB,OAAQ,kBACN,SAAC,KAAD,CACEC,KAAMnB,EACNnB,QAASA,EACTwB,OAAQ,CACNe,eAAe,EACfC,cAAc,EACdf,kBAAkB,EAClBgB,iBAAiB,GAEnB7B,aAAcA,EACd8B,oBAAqBpB,EACrBqB,gBAAiB,SAACf,GAAD,OAAUA,EAAIG,SAASa,SAAvB,GAZb,UAmBhB,SAAC,IAAD,CACE1D,KAAK,eACLC,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWgD,MAAM,OAAjB,6IAKCD,QAIP,SAAC,IAAD,CACEhD,KAAK,gBACLC,UACE,gBAAKQ,UAAU,gBAAf,UACE,SAAC,KAAD,SAIN,SAAC,IAAD,CACET,KAAK,YACLC,UACE,2CACc,wCADd,YAOT,C","sources":["sections/ComponentAsExample.jsx","sections/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport { Collapse, Container } from \"reactstrap\";\n\nimport { ContentSection, ArrowToggleIcon } from \"@certego/certego-ui\";\n\nexport default function ComponentAsExample(props) {\n  // props\n  const { name, bodyNode, ...restProps } = props;\n\n  const id = `${name}-example`;\n\n  // local state\n  const [isExpanded, setIsExpanded] = React.useState(true);\n\n  const toggle = () => setIsExpanded((s) => !s);\n\n  return (\n    <ContentSection className=\"bg-body\" {...restProps}>\n      <h4\n        id={id}\n        onClick={toggle}\n        className=\"pt-2 pb-3 pointer border-bottom border-dark\"\n      >\n        <mark className=\"text-primary\">{name}</mark>\n      </h4>\n      {!isExpanded && (\n        <div className=\"center\" onClick={toggle}>\n          <ArrowToggleIcon isExpanded={isExpanded} />\n        </div>\n      )}\n      <Collapse toggler={`#${id}`} isOpen={isExpanded}>\n        <Container>{bodyNode}</Container>\n      </Collapse>\n    </ContentSection>\n  );\n}\n","import React from \"react\";\nimport { Col } from \"reactstrap\";\n\nimport {\n  ContentSection,\n  IconAlert,\n  useAxiosComponentLoader,\n  BooleanIcon,\n  DefaultColumnFilter,\n  SelectOptionsFilter,\n  DataTable,\n  useDataTable,\n  TableHintIcon,\n} from \"@certego/certego-ui\";\n\nimport ComponentAsExample from \"./ComponentAsExample\";\n\n// constants\nconst apiUrl = \"https://jsonplaceholder.typicode.com/todos\";\nconst columns = [\n  {\n    Header: \"#\",\n    accessor: \"id\",\n    Filter: () => null,\n    maxWidth: 20,\n  },\n  {\n    Header: \"Title\",\n    accessor: \"title\",\n    Filter: DefaultColumnFilter,\n  },\n  {\n    Header: \"Completed\",\n    accessor: \"completed\",\n    Filter: SelectOptionsFilter,\n    selectOptions: [\"true\", \"false\"],\n    disableSortBy: true,\n    Cell: ({ value }) => <BooleanIcon truthy={value} />,\n    maxWidth: 40,\n  },\n];\nconst initialState = {\n  pageSize: 5,\n  sortBy: [{ id: \"id\", desc: false }],\n};\n\nexport default function Table(props) {\n  // DataTable\n  const [placeholderTodos, Loader] = useAxiosComponentLoader({\n    url: apiUrl,\n  });\n\n  const [selectedRows, setSelectedRows] = React.useState([]);\n\n  // useDataTable\n  const [, tableNode] = useDataTable(\n    {\n      url: apiUrl,\n    },\n    {\n      columns,\n      initialState,\n      config: {\n        enableFlexLayout: true,\n        enableExpanded: true,\n      },\n      SubComponent: ({ row }) => (\n        <pre className=\"text-gradient\">\n          {JSON.stringify(row.original, null, 4)}\n        </pre>\n      ),\n    },\n    (d) => d.slice(0, 5)\n  );\n\n  return (\n    <ContentSection {...props}>\n      <ComponentAsExample\n        name=\"DataTable\"\n        bodyNode={\n          <Col>\n            <IconAlert color=\"info\">\n              Suitable when data is already available client side. Thus,\n              pagination/filtering/sorting can be performed client side too.\n            </IconAlert>\n            <div className=\"d-flex align-items-center justify-content-end\">\n              <small>{selectedRows.length} selected</small>\n            </div>\n            <Loader\n              render={() => (\n                <DataTable\n                  data={placeholderTodos}\n                  columns={columns}\n                  config={{\n                    enableFilters: true,\n                    enableSortBy: true,\n                    enableFlexLayout: true,\n                    enableSelection: true,\n                  }}\n                  initialState={initialState}\n                  onSelectedRowChange={setSelectedRows}\n                  isRowSelectable={(row) => !row.original.completed}\n                />\n              )}\n            />\n          </Col>\n        }\n      />\n      <ComponentAsExample\n        name=\"useDataTable\"\n        bodyNode={\n          <Col>\n            <IconAlert color=\"info\">\n              Suitable for fetching data from a server. Thus,\n              pagination/filtering/sorting in most cases should be handled by\n              the server too.\n            </IconAlert>\n            {tableNode}\n          </Col>\n        }\n      />\n      <ComponentAsExample\n        name=\"TableHintIcon\"\n        bodyNode={\n          <div className=\"d-flex-center\">\n            <TableHintIcon />\n          </div>\n        }\n      />\n      <ComponentAsExample\n        name=\"Paginator\"\n        bodyNode={\n          <div>\n            As shown in <mark>DataTable</mark>.\n          </div>\n        }\n      />\n    </ContentSection>\n  );\n}\n"],"names":["ComponentAsExample","props","name","bodyNode","restProps","id","React","isExpanded","setIsExpanded","toggle","s","className","onClick","toggler","isOpen","apiUrl","columns","Header","accessor","Filter","maxWidth","DefaultColumnFilter","SelectOptionsFilter","selectOptions","disableSortBy","Cell","value","truthy","initialState","pageSize","sortBy","desc","Table","useAxiosComponentLoader","url","placeholderTodos","Loader","selectedRows","setSelectedRows","useDataTable","config","enableFlexLayout","enableExpanded","SubComponent","row","JSON","stringify","original","d","slice","tableNode","color","length","render","data","enableFilters","enableSortBy","enableSelection","onSelectedRowChange","isRowSelectable","completed"],"sourceRoot":""}