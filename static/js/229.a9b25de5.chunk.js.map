{"version":3,"file":"static/js/229.a9b25de5.chunk.js","mappings":"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","sources":["sections/ComponentAsExample.jsx","sections/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport { Collapse, Container } from \"reactstrap\";\n\nimport { ContentSection, ArrowToggleIcon } from \"@certego/certego-ui\";\n\nexport default function ComponentAsExample(props) {\n  // props\n  const { name, bodyNode, ...restProps } = props;\n\n  const id = `${name}-example`;\n\n  // local state\n  const [isExpanded, setIsExpanded] = React.useState(true);\n\n  const toggle = () => setIsExpanded((s) => !s);\n\n  return (\n    <ContentSection className=\"bg-body\" {...restProps}>\n      <h4\n        id={id}\n        onClick={toggle}\n        className=\"pt-2 pb-3 pointer border-bottom border-dark\"\n      >\n        <mark className=\"text-primary\">{name}</mark>\n      </h4>\n      {!isExpanded && (\n        <div className=\"center\" onClick={toggle}>\n          <ArrowToggleIcon isExpanded={isExpanded} />\n        </div>\n      )}\n      <Collapse toggler={`#${id}`} isOpen={isExpanded}>\n        <Container>{bodyNode}</Container>\n      </Collapse>\n    </ContentSection>\n  );\n}\n","import React from \"react\";\nimport { Col } from \"reactstrap\";\n\nimport {\n  ContentSection,\n  IconAlert,\n  useAxiosComponentLoader,\n  BooleanIcon,\n  DefaultColumnFilter,\n  SelectOptionsFilter,\n  DataTable,\n  useDataTable,\n  TableHintIcon,\n} from \"@certego/certego-ui\";\n\nimport ComponentAsExample from \"./ComponentAsExample\";\n\n// constants\nconst apiUrl = \"https://jsonplaceholder.typicode.com/todos\";\nconst columns = [\n  {\n    Header: \"#\",\n    accessor: \"id\",\n    Filter: () => null,\n    maxWidth: 20,\n  },\n  {\n    Header: \"Title\",\n    accessor: \"title\",\n    Filter: DefaultColumnFilter,\n  },\n  {\n    Header: \"Completed\",\n    accessor: \"completed\",\n    Filter: SelectOptionsFilter,\n    selectOptions: [\"true\", \"false\"],\n    disableSortBy: true,\n    Cell: ({ value }) => <BooleanIcon truthy={value} />,\n    maxWidth: 40,\n  },\n];\nconst initialState = {\n  pageSize: 5,\n  sortBy: [{ id: \"id\", desc: false }],\n};\n\nexport default function Table(props) {\n  // DataTable\n  const [placeholderTodos, Loader] = useAxiosComponentLoader({\n    url: apiUrl,\n  });\n\n  const [selectedRows, setSelectedRows] = React.useState([]);\n\n  // useDataTable\n  const [, tableNode] = useDataTable(\n    {\n      url: apiUrl,\n    },\n    {\n      columns,\n      initialState,\n      config: {\n        enableFlexLayout: true,\n        enableExpanded: true,\n      },\n      SubComponent: ({ row }) => (\n        <pre className=\"text-gradient\">\n          {JSON.stringify(row.original, null, 4)}\n        </pre>\n      ),\n    },\n    (d) => d.slice(0, 5)\n  );\n\n  return (\n    <ContentSection {...props}>\n      <ComponentAsExample\n        name=\"DataTable\"\n        bodyNode={\n          <Col>\n            <IconAlert color=\"info\">\n              Suitable when data is already available client side. Thus,\n              pagination/filtering/sorting can be performed client side too.\n            </IconAlert>\n            <div className=\"d-flex align-items-center justify-content-end\">\n              <small>{selectedRows.length} selected</small>\n            </div>\n            <Loader\n              render={() => (\n                <DataTable\n                  data={placeholderTodos}\n                  columns={columns}\n                  config={{\n                    enableFilters: true,\n                    enableSortBy: true,\n                    enableFlexLayout: true,\n                    enableSelection: true,\n                  }}\n                  initialState={initialState}\n                  onSelectedRowChange={setSelectedRows}\n                  isRowSelectable={(row) => !row.original.completed}\n                />\n              )}\n            />\n          </Col>\n        }\n      />\n      <ComponentAsExample\n        name=\"useDataTable\"\n        bodyNode={\n          <Col>\n            <IconAlert color=\"info\">\n              Suitable for fetching data from a server. Thus,\n              pagination/filtering/sorting in most cases should be handled by\n              the server too.\n            </IconAlert>\n            {tableNode}\n          </Col>\n        }\n      />\n      <ComponentAsExample\n        name=\"TableHintIcon\"\n        bodyNode={\n          <div className=\"d-flex-center\">\n            <TableHintIcon />\n          </div>\n        }\n      />\n      <ComponentAsExample\n        name=\"Paginator\"\n        bodyNode={\n          <div>\n            As shown in <mark>DataTable</mark>.\n          </div>\n        }\n      />\n    </ContentSection>\n  );\n}\n"],"names":["ComponentAsExample","props","name","bodyNode","restProps","_objectWithoutProperties","_excluded","id","concat","_React$useState","React","_React$useState2","_slicedToArray","isExpanded","setIsExpanded","toggle","s","_jsxs","ContentSection","_objectSpread","className","children","_jsx","onClick","ArrowToggleIcon","Collapse","toggler","isOpen","Container","apiUrl","columns","Header","accessor","Filter","maxWidth","DefaultColumnFilter","SelectOptionsFilter","selectOptions","disableSortBy","Cell","_ref","value","BooleanIcon","truthy","initialState","pageSize","sortBy","desc","Table","_useAxiosComponentLoa","useAxiosComponentLoader","url","_useAxiosComponentLoa2","placeholderTodos","Loader","selectedRows","setSelectedRows","_useDataTable","useDataTable","config","enableFlexLayout","enableExpanded","SubComponent","_ref2","row","JSON","stringify","original","d","slice","tableNode","Col","IconAlert","color","length","render","DataTable","data","enableFilters","enableSortBy","enableSelection","onSelectedRowChange","isRowSelectable","completed","TableHintIcon"],"sourceRoot":""}